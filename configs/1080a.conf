@low net_namespace low
@medium net_namespace medium
@high net_namespace high

$IF=eth1
@medium $IF=br1
$IF2=eth2
@medium $IF2=br2

global_defs {
  vrrp_version 3
  vrrp_iptables TESTIN TESTOUT
  enable_script_security
  script_user quentin
}

vrrp_script node_health_check {
  script       "${_PWD}/scripts/vs.sh"
  interval 60  # check every 60 seconds
  timeout 40   # Script Timeout of 40 seconds
  fall 3       # require 3 failures for FAULT Transition
}


vrrp_instance vip_10.64.89.185 {
  state BACKUP
  interface $IF
  virtual_router_id 151
#  nopreempt
  advert_int 1
@high    priority 240
@medium priority 220
@low    priority 200

  track_interface {
    eth0
  }

  virtual_ipaddress {
    10.64.89.185 dev eth0
  }

@low  unicast_src_ip 10.1.1.3
@medium  unicast_src_ip 10.1.1.2
@high  unicast_src_ip 10.1.1.1
  unicast_peer {
@^high    10.1.1.1
@^medium    10.1.1.2
@^low    10.1.1.3
    }

  track_script {
    node_health_check
  }
}

#vrrp_instance vip_1.1.1.185 {
#  state BACKUP
#  interface $IF
#  virtual_router_id 150
#  nopreempt
#  advert_int 1
#
#  track_interface {
#    eth1
#  }
#
#  virtual_ipaddress {
#    1.1.1.185 dev $IF
#  }
#
#@low  unicast_src_ip 10.1.1.3
#@medium  unicast_src_ip 10.1.1.2
#@high  unicast_src_ip 10.1.1.1
#  unicast_peer {
#@^high    10.1.1.1
#@^medium    10.1.1.2
#@^low    10.1.1.3
#    }
#
#  track_script {
#    node_health_check
#  }
#}

vrrp_instance VI_6 {
    interface $IF2
    state BACKUP
    virtual_router_id 253
    version 3
@high    priority 240
@medium priority 220
@low    priority 200
    advert_int 1
    virtual_ipaddress {
      fe80::4000/64
      2001:470:69dd:2::3000
      2001:470:69dd:2::4000
    }

@low  unicast_src_ip fd00:0:1:102::3
@medium  unicast_src_ip fd00:0:1:102::2
@high  unicast_src_ip fd00:0:1:102::1
  unicast_peer {
@^high    fd00:0:1:102::1
@^medium    fd00:0:1:102::2
@^low    fd00:0:1:102::3
    }
}
