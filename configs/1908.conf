@low net_namespace low
@medium net_namespace medium
@high net_namespace high

$IF=eth1
@medium $IF=br1

@low $PRI0=100
@low $PRI1=101

@medium $PRI0=110
@medium $PRI1=111

@high $PRI0=120
@high $PRI1=121

vrrp_script chk_httpd_service {
    script "/usr/bin/killall -0 httpd"
    interval 2                      # check every 2 seconds
    weight 2                        # add 2 points of prio if OK
}

vrrp_script chk_backend_service {
    script "/usr/bin/killall -0 backend"
    interval 2                      # check every 2 seconds
    weight 10                       # add 10 points of prio if OK
}

# frontend
vrrp_instance VI_0 {
    interface ${IF}
    state MASTER
    virtual_router_id 203
    priority $PRI0                    # 101 on master, 100 on backup
    advert_int 5                    # advertise instance every 5s
    garp_master_delay 10            # delay for gratuitous ARP after transition to MASTER
    garp_lower_prio_delay 10        # send gratuitous ARP if a lower priority advert is seen
    garp_lower_prio_repeat 1        # send gratuitous ARP if a lower priority advert is seen
    garp_master_refresh 60          # repeat gratuitous ARP every 60s when MASTER
    garp_master_refresh_repeat 2    # send 2 gratuitous ARPs when repeating

    authentication {
        auth_type PASS
        auth_pass frontend
    }
    virtual_ipaddress {
        10.0.0.54 dev ${IF} label ${IF}:0
    }
    track_script {
        chk_httpd_service
    }
}

vrrp_instance VI_1 {
    state BACKUP
    interface ${IF}
#    unicast_src_ip 10.0.0.55
    unicast_peer {
@^high          10.1.1.1 # node0
@^medium        10.1.1.2 # node1
@^low           10.1.1.3 # node2
    }
    virtual_router_id 211
    priority $PRI1
    advert_int 5                    # advertise instance every 5s
    garp_master_delay 10            # delay for gratuitous ARP after transition to MASTER
    garp_lower_prio_delay 10        # send gratuitous ARP if a lower priority advert is seen
    garp_lower_prio_repeat 1        # send gratuitous ARP if a lower priority advert is seen
    garp_master_refresh 60          # repeat gratuitous ARP every 60s when MASTER
    garp_master_refresh_repeat 2    # send 2 gratuitous ARPs when repeating

    authentication {
        auth_type PASS              # PASS or AH, PASS is recommended
        auth_pass backend1          # max 8 chars
    }
    virtual_ipaddress {
        10.0.0.33 dev ${IF} label ${IF}:1
    }
    track_script {
        chk_backend_service
    }
}

vrrp_instance VI_2 {
    state BACKUP
    interface ${IF}
#    unicast_src_ip 10.0.0.55
    unicast_peer {
@^high          10.1.1.1 # node0
@^medium        10.1.1.2 # node1
@^low           10.1.1.3 # node2
    }
    virtual_router_id 212
    priority $PRI0                    # 101 on master, 100 on backup
    advert_int 5                    # advertise instance every 5s
    garp_master_delay 10            # delay for gratuitous ARP after transition to MASTER
    garp_lower_prio_delay 10        # send gratuitous ARP if a lower priority advert is seen
    garp_lower_prio_repeat 1        # send gratuitous ARP if a lower priority advert is seen
    garp_master_refresh 60          # repeat gratuitous ARP every 60s when MASTER
    garp_master_refresh_repeat 2    # send 2 gratuitous ARPs when repeating

    authentication {
        auth_type PASS              # PASS or AH, PASS is recommended
        auth_pass backend2          # max 8 chars
    }
    virtual_ipaddress {
        10.0.0.34 dev ${IF} label ${IF}:2
    }
    track_script {
        chk_backend_service
    }
}

vrrp_instance VI_3 {
    state BACKUP
    interface ${IF}
@high    unicast_src_ip 10.1.1.1
@medium    unicast_src_ip 10.1.1.2
@low    unicast_src_ip 10.1.1.3
    unicast_peer {
@^high          10.1.1.1 # node0
@^medium        10.1.1.2 # node1
@^low           10.1.1.3 # node2
    }
    virtual_router_id 213
    priority $PRI0                    # 101 on master, 100 on backup
    advert_int 5                    # advertise instance every 5s
    garp_master_delay 10            # delay for gratuitous ARP after transition to MASTER
    garp_lower_prio_delay 10        # send gratuitous ARP if a lower priority advert is seen
    garp_lower_prio_repeat 1        # send gratuitous ARP if a lower priority advert is seen
    garp_master_refresh 60          # repeat gratuitous ARP every 60s when MASTER
    garp_master_refresh_repeat 2    # send 2 gratuitous ARPs when repeating

    authentication {
        auth_type PASS              # PASS or AH, PASS is recommended
        auth_pass backend2          # max 8 chars
    }
    virtual_ipaddress {
        10.0.0.35 dev ${IF} label ${IF}:3
    }
    track_script {
        chk_backend_service
    }
}
